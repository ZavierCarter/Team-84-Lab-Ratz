#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include "uRTCLib.h"
#include <Adafruit_TCA8418.h>

// LCD
LiquidCrystal_I2C lcd(0x27, 16, 2);

// RTC
uRTCLib rtc;

// Servo
Servo myservo;
bool alreadyTriggered = false;

// Buzzer & LED
int buzzerPin = 10;
int ledPin = 11;

// Keypad
Adafruit_TCA8418 keypad;
char keymap[4][4] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

// Reminder settings
byte setHour = 0;
byte setMinute = 0;
byte setDOW = 1;
byte pillCount = 1;
bool reminderSet = false;
bool alarmAcknowledged = false;

const byte TCA8418_INT_STAT = 0x02; // Address for INT_STAT register

const char* getDayOfWeek(byte dow) {
  switch (dow) {
    case 1: return "Sunday";
    case 2: return "Monday";
    case 3: return "Tuesday";
    case 4: return "Wednesday";
    case 5: return "Thursday";
    case 6: return "Friday";
    case 7: return "Saturday";
    default: return "Unknown";
  }
}

void formatTime(byte hour, byte minute, byte second) {
  byte displayHour = hour % 12;
  if (displayHour == 0) displayHour = 12;
  const char* period = (hour < 12) ? "AM" : "PM";
  Serial.print(displayHour); Serial.print(":");
  if (minute < 10) Serial.print("0");
  Serial.print(minute); Serial.print(":");
  if (second < 10) Serial.print("0");
  Serial.print(second); Serial.print(" "); Serial.print(period);
}

void checkAndHandleOverflow() {
  uint8_t intStatus = keypad.readRegister(TCA8418_INT_STAT);
  if (intStatus & 0x10) { // Check overflow bit
    Serial.println("TCA8418 overflow detected! Flushing keypad.");
    keypad.flush();
  }
}

void setup() {
  delay(2000);
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Press # to set");
  lcd.setCursor(0, 1);
  lcd.print("Press # to start");

  URTCLIB_WIRE.begin();
  rtc.set_rtc_address(0x68);
  rtc.set(0, 48, 16, 4, 23, 4, 25);  // Set time if needed

  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);

  myservo.attach(12);
  myservo.write(0);

  if (!keypad.begin()) {
    Serial.println("TCA8418 not found!");
    while (1);
  }
  keypad.matrix(8, 10);
  keypad.flush();

  Serial.println("TCA8418 Ready");
}

void loop() {
  rtc.refresh();
  checkAndHandleOverflow(); // <<< Overflow control

  static unsigned long lastPrint = 0;
  if (millis() - lastPrint >= 1000) {
    lastPrint = millis();
    Serial.print(getDayOfWeek(rtc.dayOfWeek() + 1)); Serial.print(": ");
    Serial.print(rtc.month()); Serial.print("/");
    Serial.print(rtc.day()); Serial.print("/");
    Serial.print(rtc.year()); Serial.print(" ");
    formatTime(rtc.hour(), rtc.minute(), rtc.second());
    Serial.println();
  }

  if (keypad.available() > 0) {
    int key = keypad.getEvent();
    if (key & 0x80) {
      key &= 0x7F;
      key--;
      int row = key / 10;
      int col = key % 10;
      if (row >= 0 && row < 4 && col >= 0 && col < 4) {
        char c = keymap[row][col];
        Serial.print("Key Pressed: "); Serial.println(c);
        if (c == '#') {
          enterMenu();
        }
      }
    }
  }

  if (reminderSet &&
      rtc.hour() == setHour &&
      rtc.minute() == setMinute &&
      rtc.second() == 0 &&
      rtc.dayOfWeek() + 1 == setDOW &&
      !alreadyTriggered) {
    triggerReminder();
  }

  lcd.setCursor(0, 0);
  lcd.print(rtc.month()); lcd.print("/");
  if (rtc.day() < 10) lcd.print("0");
  lcd.print(rtc.day()); lcd.print("/");
  lcd.print(rtc.year() % 100); lcd.print(" ");
  if (rtc.hour() < 10) lcd.print("0");
  lcd.print(rtc.hour()); lcd.print(":");
  if (rtc.minute() < 10) lcd.print("0");
  lcd.print(rtc.minute()); lcd.print("  ");

  lcd.setCursor(0, 1);
  lcd.print("Press # to start");
}

void enterMenu() {
  lcd.clear(); lcd.setCursor(0, 0); lcd.print("Set DOW (1-7):");
  setDOW = getDigitInput();

  lcd.clear(); lcd.setCursor(0, 0); lcd.print("Set Hour (0-23):");
  setHour = getDigitInput();

  lcd.clear(); lcd.setCursor(0, 0); lcd.print("Set Minute (0-59):");
  setMinute = getDigitInput();

  lcd.clear(); lcd.setCursor(0, 0); lcd.print("How many pills?");
  pillCount = getDigitInput();

  reminderSet = true;
  alreadyTriggered = false;
  lcd.clear(); lcd.setCursor(0, 0); lcd.print("Reminder Saved");
  delay(1000);
}

byte getDigitInput() {
  String input = "";
  keypad.flush();
  lcd.setCursor(0, 1); lcd.print("> ");
  unsigned long startMillis = millis();

  while (millis() - startMillis < 30000) {
    checkAndHandleOverflow(); // <<< Overflow control
    if (keypad.available() > 0) {
      startMillis = millis();
      int key = keypad.getEvent();
      if (key & 0x80) {
        key &= 0x7F;
        key--;
        int row = key / 10;
        int col = key % 10;
        if (row >= 0 && row < 4 && col >= 0 && col < 4) {
          char c = keymap[row][col];
          if (isdigit(c) && input.length() < 2) {
            input += c;
            lcd.setCursor(2 + input.length() - 1, 1);
            lcd.print(c);
          } else if (c == 'B' && input.length() > 0) {
            input.remove(input.length() - 1);
            lcd.setCursor(2 + input.length(), 1);
            lcd.print(" ");
            lcd.setCursor(2 + input.length(), 1);
          } else if (c == 'D' && input.length() > 0) {
            keypad.flush();
            return input.toInt();
          }
        }
      }
    }
  }
  lcd.clear();
  lcd.print("Timeout!");
  delay(1000);
  keypad.flush();
  return 0;
}

void triggerReminder() {
  keypad.flush();
  myservo.write(0);
  delay(100);
  digitalWrite(buzzerPin, HIGH);
  digitalWrite(ledPin, HIGH);
  alarmAcknowledged = false;

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Dropping Pills...");

  for (byte i = 0; i < pillCount; ++i) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Dropping Pill ");
    lcd.print(i + 1);

    myservo.write(180);
    waitWithKeyCheck(5000);

    myservo.write(0);
    waitWithKeyCheck(5000);
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Finished");
  digitalWrite(buzzerPin, LOW);
  digitalWrite(ledPin, LOW);

  delay(1000);
  reminderSet = false;
  alreadyTriggered = true;
}

void waitWithKeyCheck(unsigned long waitTime) {
  unsigned long start = millis();
  if (!alarmAcknowledged) keypad.flush();

  while (millis() - start < waitTime) {
    checkAndHandleOverflow();
    if (!alarmAcknowledged && keypad.available() > 0) {
      int key = keypad.getEvent();
      if (key & 0x80) {
        key &= 0x7F;
        key--;
        int row = key / 10;
        int col = key % 10;
        if (row >= 0 && row < 4 && col >= 0 && col < 4) {
          char c = keymap[row][col];
          if (c != 'D') {
            alarmAcknowledged = true;
            digitalWrite(buzzerPin, LOW);
            digitalWrite(ledPin, LOW);
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Alarm Stopped");
            delay(1000);
            lcd.clear();
            keypad.flush();
          }
        }
      }
    }
    delay(10);
  }
}
